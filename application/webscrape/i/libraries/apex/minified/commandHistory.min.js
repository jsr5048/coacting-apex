!function(a,b,c){"use strict";var d=function(){function a(){if(f<0)throw"Command history nothing to undo"}function d(){if(f>=e.length-1)throw"Command history nothing to redo"}var e=[],f=-1,g=null,h={execute:function(){},undo:function(){},redo:function(){return this.execute()},label:function(){return""}};return{clear:function(){e=[],f=-1,c(document).trigger("commandHistoryChange")},execute:function(a){try{b.info("Execute command: "+a.label()),a.execute()}catch(d){return b.error("Exception during execute command.",d),void(g&&g("execute",a,d))}f+=1,f<e.length&&(e.length=f),e.push(a),c(document).trigger("commandHistoryChange")},undo:function(){a();try{b.info("Undo command: "+e[f].label()),e[f].undo()}catch(d){b.error("Exception during undo command.",d),g&&g("undo",e[f],d),e.length=f}f-=1,c(document).trigger("commandHistoryChange")},redo:function(){d(),f+=1;try{b.info("Redo command: "+e[f].label()),e[f].redo()}catch(a){b.error("Exception during redo command.",a),g&&g("redo",e[f],a),e.length=f,f-=1}c(document).trigger("commandHistoryChange")},canUndo:function(){return f>=0},canRedo:function(){return f<e.length-1},undoLabel:function(){return a(),e[f].label()},redoLabel:function(){return d(),e[f+1].label()},setErrorHandler:function(a){g=a},getErrorHandler:function(){return g},baseCommand:function(){return Object.create(h)}}};a.commandHistory=d(),a.commandHistory.newCommandHistory=d}(apex,apex.debug,apex.jQuery);