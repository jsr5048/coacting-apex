CREATE TABLE  "ORGANIZATION_CAUSES"
  (	"ID" NUMBER NOT NULL ENABLE,
 "ORGANIZATION_ID" NUMBER NOT NULL ENABLE,
 "CAUSE_ID" NUMBER,
 "CREATED_BY" VARCHAR2(100) NOT NULL ENABLE,
 "CREATED_ON" DATE NOT NULL ENABLE,
 "UPDATED_BY" VARCHAR2(100) NOT NULL ENABLE,
 "UPDATED_ON" DATE NOT NULL ENABLE,
 "CAUSE_DESCRIPTION" VARCHAR2(500),
 "PROBLEM_ID" NUMBER,
  CONSTRAINT "ORGANIZATION_CAUSE_ID_PK" PRIMARY KEY ("ID") ENABLE,
  CONSTRAINT "ORGANIZATION_CAUSES_UK" UNIQUE ("PROBLEM_ID") ENABLE
  ) ;

  ALTER TABLE  "ORGANIZATION_CAUSES" ADD CONSTRAINT "ORGANIZATION_CAUSES_FK1" FOREIGN KEY ("ORGANIZATION_ID")
  REFERENCES  "ORGANIZATION" ("ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE  "ORGANIZATION_CAUSES" ADD CONSTRAINT "ORGANIZATION_CAUSES_FK2" FOREIGN KEY ("CAUSE_ID")
  REFERENCES  "CAUSES" ("ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE  "ORGANIZATION_CAUSES" ADD CONSTRAINT "ORGANIZATION_CAUSES_FK3" FOREIGN KEY ("PROBLEM_ID")
  REFERENCES  "POST" ("ID") ENABLE;

  CREATE OR REPLACE TRIGGER  "ORGANIZATION_CAUSES_BIU"
     before insert or update
     on organization_causes
     for each row
  begin
     if :new.id is null then
         :new.id := to_number(sys_guid(), 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');
     end if;
     if inserting then
         :new.created_by := lower(nvl(v('APP_USER'),user));
         :new.created_on := sysdate;
     end if;
     :new.updated_by := lower(nvl(v('APP_USER'),user));
     :new.updated_on := sysdate;
  end organization_causes_biu;

  /
  ALTER TRIGGER  "ORGANIZATION_CAUSES_BIU" ENABLE;
